-- 1. 加载库
local Bracket = loadstring(game:HttpGet("https://raw.githubusercontent.com/fcsdsss/ui-library/refs/heads/main/bracket/v3.4dev/source"))()

-- 2. 设置全局UI开关快捷键 (PC端使用)
Bracket:ToggleUI({ Key = Enum.KeyCode.RightShift }) 

-- 3. 创建水印和发送通知
local Watermark = Bracket:Watermark({
    Title = "Bracket v3.4dev",
    Flag = "UI/Watermark/Position",
    Enabled = true
})
Bracket:PushNotification({Title = "Bracket Library", Description = "Successfully loaded.", Duration = 8})

-- 4. 创建主窗口
local Window = Bracket:Window({
    Name = "My Awesome UI",
    Enabled = true,
    Color = Color3.fromRGB(100, 125, 255),
    Size = UDim2.new(0, 420, 0, 390),
    Position = UDim2.new(0.5, -120, 0.5, -120)
})

-- 5. 创建主标签页
local MainTab = Window:Tab({ Name = "Main" })
do
    local LeftSection = MainTab:Section({ Name = "Features", Side = "Left" })

    local MyToggle = LeftSection:Toggle({
        Name = "Enable Awesome Feature",
        Flag = "AwesomeFeatureToggle",
        Value = true
    })
    MyToggle:Colorpicker({ Flag = "AwesomeFeatureColor" })

    LeftSection:Slider({
        Name = "Speed Control",
        Flag = "SpeedSlider",
        Value = 50
    })
end

-- 6. 创建设置标签页
local SettingsTab = Window:Tab({ Name = "Settings" })
do
    local MenuSection = SettingsTab:Section({ Name = "Menu", Side = "Left"})
    do
        local UIToggle = MenuSection:Toggle({
            Name = "Toggle UI",
            Flag = "UI/Visible", -- 使用独立的Flag来保存其状态
            Value = Window.Enabled, -- 初始值与窗口当前状态保持一致
            Callback = function(newValue)
                Window.Enabled = newValue
            end
        })

        Window:GetPropertyChangedSignal("Enabled"):Connect(function(newEnabledState)
            UIToggle.Value = newEnabledState
        end)
    end

    SettingsTab:AddConfigSection("MyConfigFolder", "Right") -- 将配置部分移到右边，为菜单腾出空间
end

Bracket:AutoloadConfig("MyConfigFolder")
