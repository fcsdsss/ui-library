local HttpService = game:GetService("HttpService")
local url = "https://raw.githubusercontent.com/fcsdsss/ui-library/refs/heads/main/Obelus/ui%20lib/source.lua"

local success, sourceCode = pcall(function()
    return HttpService:GetAsync(url)
end)

if not success then
    warn("无法从 GitHub 获取 UI 库代码:", sourceCode)
    return
end

-- 2. 使用 loadstring 执行代码字符串
--    loadstring 会编译代码并返回一个可以执行的函数
local success, libraryFunction = pcall(loadstring(sourceCode))

if not success then
    warn("执行 loadstring 时出错:", libraryFunction)
    return
end

-- 3. 调用该函数以获取返回的库 table
local Obelus = libraryFunction()

if not Obelus then
    warn("UI 库未能正确加载并返回 table。")
    return
end

--- 从这里开始，使用方法和之前完全一样 ---

-- 创建一个新的UI窗口
local Window = Obelus:Window({
	Name = "Obelus 示例 (Loadstring 加载)"
})

-- 创建第一个页面 (主页)
local MainPage = Window:Page({
	Name = "主页"
})

-- 在主页的左侧创建一个区域
local LeftSection = MainPage:Section({
	Name = "常规选项",
	Side = "Left",
	Size = 250
})

-- 添加一个按钮 (Button)
LeftSection:Button({
	Name = "执行操作",
	Callback = function()
		print("按钮被点击了！")
		Obelus:Notify({
			Title = "操作成功",
			Text = "您点击了“执行操作”按钮。",
			Duration = 5,
			Color = Color3.fromRGB(85, 200, 85)
		})
	end
})

-- 添加一个滑块 (Slider)
local mySlider = LeftSection:Slider({
	Name = "速度调整",
	Default = 50,
	Minimum = 0,
	Maximum = 100,
	Decimals = 1,
	Suffix = "%",
	Callback = function(value)
		print("当前速度值为:", value)
	end
})

-- 默认显示第一个页面
MainPage:Turn(true)

print("Obelus UI 库已通过 loadstring 加载成功。")
